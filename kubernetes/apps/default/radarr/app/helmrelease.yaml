---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.3.2.8504@sha256:d87bccdcac992e5d43f93f355ee714e137b21b77df21e250bc9b3ac4d14708db
            env:
              TZ: "${TIMEZONE}"
              PUSHOVER_APP_URL: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
              # PUSHOVER_DEBUG: "false"
              # PUSHOVER_PRIORITY: "0"
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 8080
              RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              RADARR__LOG_LEVEL: info
              RADARR__THEME: dark
            # envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 256M
              limits:
                memory: 1Gi
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      # main:
      #   enabled: true
      #   className: "nginx"
      #   annotations:
      #     # nginx.ingress.kubernetes.io/auth-method: GET
      #     # nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local.:8888/api/verify
      #     # nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
      #     # nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
      #     # nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
      #     hajimari.io/icon: mdi:television-classic
      #   hosts:
      #     - host: *host
      #       paths:
      #         - path: /
      #           service:
      #             name: main
      #             port: http
      #   tls:
      #     - hosts:
      #         - *host
      internal:
        enabled: true
        className: internal
        annotations:
          hajimari.io/icon: mdi:television-classic
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        storageClass: "radarr-config-pv"
        size: 10Gi
      media:
        enabled: true
        type: nfs
        server: hoperestored.h.sdboyer.io
        path: /mnt/std/media
        mountPath: /media
      # scripts:
      #   enabled: true
      #   type: configMap
      #   name: radarr-configmap
      #   subPath: pushover-notify.sh
      #   mountPath: /scripts/pushover-notify.sh
      #   defaultMode: 0775
      #   readOnly: true
    resources:
      requests:
        cpu: 25m
        memory: 500Mi
      limits:
        memory: 1000Mi
